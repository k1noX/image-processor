version: '3.8'

services:
  postgres:
    env_file:
      - postgresql.env
    restart: always
    image: postgres:15
    volumes:
      - ./postgres-data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app
  rabbitmq-server:
    image: "rabbitmq:3.6-management-alpine"
    hostname: "rabbitmq-host"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "pass"
    networks:
      - rabbitnetwork
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 5s
      retries: 3
  image-processing-api:
    env_file:
      - postgresql.env
      - image-processing-api/rabbitmq.env
    build: ./image-processing-api
    ports:
      - 7000:7000
    volumes:
      - ./image-processing-api/src:/src
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq-server:
        condition: service_healthy
    command: python app.py
    networks:
      - rabbitnetwork
      - app
    healthcheck:
      test: curl --fail http://image-processing-api:5050/api/image-processing/ || exit 1
      interval: 10s
      timeout: 2s
      retries: 5

  worker:
    env_file:
      - postgresql.env
      - image-processing-api/rabbitmq.env
    build: ./image-processing-api
    volumes:
      - ./image-processing-api/src:/src
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq-server:
        condition: service_healthy
    command: python scripts/worker.py
    networks:
      - rabbitnetwork
      - app
    deploy:
      mode: replicated
      replicas: 2
  simple-file-server:
    env_file:
      - postgresql.env
    build: ./simple-file-server
    volumes:
      - ./simple-file-server:/app
      - ./storage:/var/storage
    depends_on:
      postgres:
        condition: service_healthy
    command: python main.py
    networks:
      - app
    healthcheck:
      test: curl --fail http://simple-file-server:5051/api/file-server/ || exit 1
      interval: 10s
      timeout: 2s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app
    depends_on:
      image-processing-api:
        condition: service_healthy
      simple-file-server:
        condition: service_healthy
networks:
  rabbitnetwork:
    driver: bridge
  app:
    driver: bridge

