version: '3.8'

services:
  postgres:
    env_file:
      - ./compose/postgres/postgresql.env
    restart: always
    image: postgres:15
    volumes:
      - ./compose/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq-server:
    image: "rabbitmq:3.6-management-alpine"
    hostname: "rabbitmq-host"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "pass"
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 5s
      retries: 3

  image-processor:
    env_file:
      - ./compose/postgres/postgresql.env
      - ./compose/rabbitmq/rabbitmq.env
    build: 
      context: ./image-processor
      dockerfile: image-processor.Dockerfile
    volumes:
      - ./image-processor/src:/src
      - ./compose/image-processor/conf.yml:/src/config/config.yml
      - ./compose/image-processor/wsgi.ini:/src/wsgi.ini
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq-server:
        condition: service_healthy
    command: uwsgi --ini wsgi.ini
    healthcheck:
      test: curl --fail http://image-processor:5050/api/image-processing/status || exit 1
      interval: 10s
      timeout: 2s
      retries: 5

  worker:
    restart: always
    env_file:
      - ./compose/postgres/postgresql.env
      - ./compose/rabbitmq/rabbitmq.env
    build: 
      context: ./image-processor
      dockerfile: worker.Dockerfile
    volumes:
      - ./image-processor/src:/src
      - ./compose/worker/conf.yml:/src/config/config.yml
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq-server:
        condition: service_healthy
      file-storage:
        condition: service_healthy
    command: python scripts/worker.py
    deploy:
      mode: replicated
      replicas: 2

  file-storage:
    env_file:
      - ./compose/postgres/postgresql.env
    build: 
      context: ./file-storage
      dockerfile: file-storage.Dockerfile
    volumes:
      - ./file-storage/src:/src
      - ./compose/file-storage/storage:/var/storage
      - ./compose/file-storage/conf.yml:/src/config/config.yml
      - ./compose/file-storage/wsgi.ini:/src/wsgi.ini
    depends_on:
      postgres:
        condition: service_healthy
    command: uwsgi --ini wsgi.ini
    healthcheck:
      test: curl --fail http://file-storage:5051/api/file-server/status || exit 1
      interval: 10s
      timeout: 2s
      retries: 5

  nginx:
    image: nginx:1.14.2
    ports:
      - 80:80
    volumes:
      - ./compose/file-storage/storage:/var/www/html/static_files
      - ./compose/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      image-processor:
        condition: service_healthy
      file-storage:
        condition: service_healthy  
